# 动态分区

动态分区是 Android 的用户空间分区系统。使用此分区系统，您可以在无线下载 (OTA) 更新期间创建、销毁分区或者调整分区大小。
借助动态分区，供应商无需担心各个分区（例如 system、vendor 和 product）的大小。取而代之的是，设备分配一个 super 分区，
其中的子分区可动态地调整大小。单个分区映像不再需要为将来的 OTA 预留空间。相反，super 中剩余的可用空间还可用于所有动态分区。

# 实现动态分区

动态分区是使用 Linux 内核中的 dm-linear device-mapper 模块实现的。super 分区中包含列出 super 内每个动态分区的名称和块范围的元数据。
在第一阶段 init 执行期间，系统会解析和验证这些元数据，并创建虚拟块设备来表示每个动态分区。
应用 OTA 时，系统会根据需要自动创建/删除动态分区，或者调整动态分区的大小。若是 A/B 设备，将存在两个元数据副本，而更改仅会应用到表示目标槽位的副本。
由于动态分区是在用户空间中实现的，因此引导加载程序所需的分区不能是动态的。例如，引导加载程序会读取 boot、dtbo 和 vbmeta，因此这些分区必须仍保持为物理分区。
每个动态分区都可以属于一个更新组。这些组会限制组内的分区可以使用的最大空间。例如，system 和 vendor 可以同属于一个组，而该组会限制 system 和 vendor 的总大小。


分区更改

对于搭载 Android 10 的设备，请创建名为 super 的分区。super 分区在内部处理 A/B 槽位，因此 A/B 设备不需要单独的 super_a 和 super_b 分区。
引导加载程序未使用的所有只读 AOSP 分区都必须是动态的，并且必须从 GUID 分区表 (GPT) 中移除。供应商专用分区则可以不是动态的，并且可以放在 GPT 中。
注意：应避免将 userdata 或任何其他可读写的永久性分区放在 super 中。

要估算 super 的大小，需加上要从 GPT 中删除的分区的大小。若是 A/B 设备，应包括两个槽位的大小。图 1 显示了转换为动态分区前后的分区表示例。
